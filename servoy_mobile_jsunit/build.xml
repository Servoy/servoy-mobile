<?xml version="1.0" encoding="utf-8" ?>
<project name="MobileTestClient" default="war" basedir=".">
	
	<property name="servoy_base.dir" location="../servoy_base" />
	<property name="servoy_base.classes" location="../servoy_base/bin" /> <!-- this relies on eclipse workspace builds to generate the classes; with ant builds - please declare the correct value before referencing this script -->
	<property name="servoy_mobile.dir" location="../servoy_mobile" />
	<property name="servoy_mobile.dir" location="../servoy_mobile" />
	<property name="eclipse_target.dir" location="../eclipse_target" />
	<property name="cse.model.exporter.mobile.mobilewar.rel" value="../com.servoy.eclipse.model.exporter.mobile/src/com/servoy/eclipse/model/mobile/exporter/resources" />

	<property name="gwt.args" value="-strict" />
	<property name="gwt.jars" location="${servoy_mobile.dir}/lib" />
	
	<property name="javacDebugInfo" value="true" />
	<property name="bundleJavacSource" value="1.7" />
	<property name="bundleJavacTarget" value="1.7" />
	<property name="javacVerbose" value="false" />
	<property name="compiler" value="modern" />
	
	<property name="CPU.cores" value="2"/>

	<path id="project.class.path">
		<pathelement location="${servoy_base.classes}"/>
		<pathelement location="${gwt.jars}/gwt-user.jar"/>
		<fileset dir="${gwt.jars}" includes="gwt-dev.jar"/>
		<!-- Add any additional non-server libs (such as JUnit) -->
		<fileset dir="war/WEB-INF/lib" includes="**/*.jar"/>
		<fileset dir="${eclipse_target.dir}/ship_plugins/plugins">
			<include name="*.jar" />
			<exclude name="org.eclipse*.jar" />
		</fileset>
	</path>

	<path id="project.class.path.withsrc">
		<pathelement location="${servoy_mobile.dir}/src"/>
		<fileset dir="${servoy_mobile.dir}/lib" includes="**/*.jar"/>
		<pathelement location="${servoy_base.dir}/src"/>
		<pathelement location="src" />
		<path refid="project.class.path" />
	</path>

	<target name="libs" description="Copy libs to WEB-INF/lib">
		<!--<delete file="war/WEB-INF/lib/gwt-dev.jar" />
		<delete file="war/WEB-INF/lib/gwt-log-3.2.0.jar" />-->
		
		<mkdir dir="war/WEB-INF/lib" />
		<!-- in GWT 2.5 caused a need for gwt-dev in order to use gwt-log but until 2.5.1, this workaround jar can be used until then -->
		<copy todir="war/WEB-INF/lib" file="${gwt.jars}/gwt-log-3.2.0.jar" />
	</target>

	<target name="javac" depends="libs" description="Compile java source to bytecode">
		<mkdir dir="war/WEB-INF/classes"/>
		<javac srcdir="src" includes="com/servoy/mobile/test/server/**, com/servoy/mobile/test/shared/**" encoding="utf-8"
			    includeAntRuntime="no"
			    failonerror="${javacFailOnError}"
			    executable="${javac_1.7}"
			    destdir="war/WEB-INF/classes"
				compiler="${compiler}"
				source="${bundleJavacSource}" target="${bundleJavacTarget}" nowarn="true"
				debug="${javacDebugInfo}" debuglevel="lines,vars,source" verbose="${javacVerbose}"
				deprecation="off"
				fork="yes">
			<classpath refid="project.class.path"/>
		</javac>
		<copy todir="war/WEB-INF/classes">
			<fileset dir="src" includes="logging.properties,com/servoy/mobile/test/server/**, com/servoy/mobile/test/shared/**" excludes="**/*.java"/>
		</copy>
	</target>

	<target name="gwtc" depends="javac, update_html" description="GWT compile to JavaScript (production mode)">
		<delete dir="gwt-unitCache"/>
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
			<classpath>
				<path refid="project.class.path.withsrc"/>
			</classpath>
			<!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
			<jvmarg value="-Xmx512m"/>
			<arg line="-war"/>
			<arg value="war"/>
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
		    <arg value="-localWorkers"/>
		    <arg value="${CPU.cores}"/>
			<arg value="-style"/>
			<arg value="PRETTY"/>
			<arg line="${gwt.args}"/>
			<arg value="com.servoy.mobile.test.MobileTestClient"/>
		</java>
	</target>

	<!-- this target can still be used with developer started TOMCAT using deployed MobileTestClient.war
			 but you have to make sure the war is up-to-date and that the -startupUrl points to the host page in the Tomcat GWT APP;
			 this way you can debug with GWT the client java code -->
	<target name="devmode" depends="javac, update_html" description="Run development mode">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
			<classpath>
				<path refid="project.class.path.withsrc"/>
			</classpath>
			<jvmarg value="-Xmx512m"/>
			<arg value="-startupUrl"/>
			<arg value="http://127.0.0.1:8080/servoy_mobile_jsunit/servoy_mobile_jsunit.html?log_level=DEBUG&amp;noinitsmc=true&amp;bid=0&amp;nodebug=true"/>
			<arg line="-war"/>
			<arg value="war"/>
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
			<arg value="-noserver"/>
			<arg line="${gwt.args}"/>
			<arg value="com.servoy.mobile.test.MobileTestClient"/>
		</java>
	</target>

	<target name="update_html" description="Update servoy_mobile_jsunit.html; it must always be almost the same as servoy_mobile.html">
		<copy file="${servoy_mobile.dir}/war/servoy_mobile.html" toFile="war/servoy_mobile_jsunit.html" overwrite="true" />
		<replace file="war/servoy_mobile_jsunit.html" summary="true">
			<replacefilter token="mobileclient/mobileclient" value="mobiletestclient/mobiletestclient"/>
			<replacefilter token="mobileclient/" value="mobiletestclient/"/>
			<replacefilter token="&lt;head&gt;" value="&lt;head&gt;&#xA;&#xD;&#x9;&#x9;&lt;link rel=&quot;shortcut icon&quot; type=&quot;image/x-icon&quot; href=&quot;favicon.ico&quot;&gt;"/>
		</replace>
	</target>

	<target name="build" depends="gwtc" description="Build this project" />

	<target name="manual_war" depends="build" description="Create a war file">
		<jar destfile="servoy_mobile_jsunit.war" basedir="war"/>
	</target>

	<target name="war" depends="build" description="Create a war file">
		<delete file="servoy_mobile_jsunit.war"/>
		<jar	destfile="servoy_mobile_jsunit.war"
			basedir="war"
			duplicate="fail"
			excludes="**/*.war,**/solution_json.js,**/solution.js,**/media/**,**/index.html"
		/>
		<move tofile="${cse.model.exporter.mobile.mobilewar.rel}/servoy_mobile_jsunit.war" file="servoy_mobile_jsunit.war"/>
		<delete dir="gwt-unitCache"/>
	</target>

	<target name="clean" description="Cleans this project">
		<delete dir="war/WEB-INF/classes" failonerror="false" />
		<delete dir="war/mobiletestclient" failonerror="false" />
	</target>

</project>
